define("editorjs-styledblocks",[],(function(){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(o,i,function(t){return e[t]}.bind(null,i));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o={title:"",key:"",background:"",icon:""};t.default=class{constructor({data:e,config:t}){e||(e=""),this.data=e,this.styles=[],t&&t.styles&&(this.styles=t.styles)}static get isTune(){return!0}wrap(e,t){var n;if(e.style.backgroundColor="",e.style.paddingLeft="",null===(n=e.querySelector(".styled-blocks-label"))||void 0===n||n.remove(),this.data){t||(t=this.styles.find(e=>e.key===this.data)||o);const n=window.document.createElement("div");n.classList.add("styled-blocks-label"),n.innerText=t.title,n.style.position="absolute",n.style.top="8px",n.style.right="24px",n.style.opacity="0.5",n.style.fontSize="0.7em",e.appendChild(n),e.style.backgroundColor=t.background,e.style.position="relative",e.style.paddingLeft="1em",e.querySelector}return this.blockContent=e,e}save(){return this.data}addButton(e){const t=window.document.createElement("div"),n=window.document.createElement("div");n.classList.add("ce-popover__item-icon"),n.style.display="inline-block",n.style.marginRight="8px",n.style.clear="left",n.innerHTML=e.icon;const o=window.document.createElement("div");return o.innerText=e.title,o.classList.add("ce-popover__item-label"),o.style.display="inline-block",t.classList.add("ce-popover__item"),t.style.paddingBottom="4px",t.appendChild(n),t.setAttribute("data-styled-block-style",e.key),t.appendChild(o),t.addEventListener("click",()=>{e.key===this.data?this.data="":this.data=e.key,this.wrap(this.blockContent,e)}),t}render(){const e=this,t=window.document.createElement("div");return this.styles.forEach(n=>{const o=e.addButton(n);t.appendChild(o)}),t}}}])}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,