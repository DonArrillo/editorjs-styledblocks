define("editorjs-styledblocks",[],(function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=class{constructor({data:e,config:t}){e||(e=""),this.data=e,this.styles=[],t&&t.styles&&(this.styles=t.styles)}static get isTune(){return!0}wrap(e,t){var n;if(e.style.backgroundColor="",e.style.paddingLeft="",null===(n=e.querySelector(".styled-blocks-label"))||void 0===n||n.remove(),this.data){const n=window.document.createElement("div");n.classList.add("styled-blocks-label"),n.innerText=t.title,n.style.position="absolute",n.style.top="8px",n.style.right="24px",n.style.opacity="0.5",n.style.fontSize="0.7em",e.appendChild(n),e.style.backgroundColor=t.background,e.style.position="relative",e.style.paddingLeft="1em",e.querySelector}return this.blockContent=e,e}save(){return this.data}addButton(e){const t=window.document.createElement("div"),n=window.document.createElement("div");n.classList.add("ce-popover__item-icon"),n.style.display="inline-block",n.style.marginRight="8px",n.style.clear="left",n.innerHTML=e.icon;const r=window.document.createElement("div");return r.innerText=e.title,r.classList.add("ce-popover__item-label"),r.style.display="inline-block",t.classList.add("ce-popover__item"),t.appendChild(n),t.setAttribute("data-styled-block-style",e.key),t.appendChild(r),t.addEventListener("click",()=>{e.key===this.data?this.data="":this.data=e.key,this.wrap(this.blockContent,e)}),t}render(){const e=this,t=window.document.createElement("div");return this.styles.forEach(n=>{const r=e.addButton(n);t.appendChild(r)}),t}}}])}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lZGl0b3Jqcy1zdHlsZWRibG9ja3Mvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vZWRpdG9yanMtc3R5bGVkYmxvY2tzLy4vc3JjL2luZGV4LnRzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiZGVmYXVsdCIsImRhdGEiLCJjb25maWciLCJ0aGlzIiwic3R5bGVzIiwiYmxvY2tDb250ZW50Iiwic3R5bGUiLCJfYSIsImJhY2tncm91bmRDb2xvciIsInBhZGRpbmdMZWZ0IiwicXVlcnlTZWxlY3RvciIsInJlbW92ZSIsImxhYmVsIiwid2luZG93IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwiaW5uZXJUZXh0IiwidGl0bGUiLCJwb3NpdGlvbiIsInRvcCIsInJpZ2h0Iiwib3BhY2l0eSIsImZvbnRTaXplIiwiYXBwZW5kQ2hpbGQiLCJiYWNrZ3JvdW5kIiwiYnV0dG9uIiwiaWNvbiIsImRpc3BsYXkiLCJtYXJnaW5SaWdodCIsImNsZWFyIiwiaW5uZXJIVE1MIiwic2V0QXR0cmlidXRlIiwiYWRkRXZlbnRMaXN0ZW5lciIsIndyYXAiLCJzZWxmIiwid3JhcHBlciIsImZvckVhY2giLCJhZGRCdXR0b24iXSwibWFwcGluZ3MiOiJpRUFDRSxJQUFJQSxFQUFtQixHQUd2QixTQUFTQyxFQUFvQkMsR0FHNUIsR0FBR0YsRUFBaUJFLEdBQ25CLE9BQU9GLEVBQWlCRSxHQUFVQyxRQUduQyxJQUFJQyxFQUFTSixFQUFpQkUsR0FBWSxDQUN6Q0csRUFBR0gsRUFDSEksR0FBRyxFQUNISCxRQUFTLElBVVYsT0FOQUksRUFBUUwsR0FBVU0sS0FBS0osRUFBT0QsUUFBU0MsRUFBUUEsRUFBT0QsUUFBU0YsR0FHL0RHLEVBQU9FLEdBQUksRUFHSkYsRUFBT0QsUUEwRGYsT0FyREFGLEVBQW9CUSxFQUFJRixFQUd4Qk4sRUFBb0JTLEVBQUlWLEVBR3hCQyxFQUFvQlUsRUFBSSxTQUFTUixFQUFTUyxFQUFNQyxHQUMzQ1osRUFBb0JhLEVBQUVYLEVBQVNTLElBQ2xDRyxPQUFPQyxlQUFlYixFQUFTUyxFQUFNLENBQUVLLFlBQVksRUFBTUMsSUFBS0wsS0FLaEVaLEVBQW9Ca0IsRUFBSSxTQUFTaEIsR0FDWCxvQkFBWGlCLFFBQTBCQSxPQUFPQyxhQUMxQ04sT0FBT0MsZUFBZWIsRUFBU2lCLE9BQU9DLFlBQWEsQ0FBRUMsTUFBTyxXQUU3RFAsT0FBT0MsZUFBZWIsRUFBUyxhQUFjLENBQUVtQixPQUFPLEtBUXZEckIsRUFBb0JzQixFQUFJLFNBQVNELEVBQU9FLEdBRXZDLEdBRFUsRUFBUEEsSUFBVUYsRUFBUXJCLEVBQW9CcUIsSUFDL0IsRUFBUEUsRUFBVSxPQUFPRixFQUNwQixHQUFXLEVBQVBFLEdBQThCLGlCQUFWRixHQUFzQkEsR0FBU0EsRUFBTUcsV0FBWSxPQUFPSCxFQUNoRixJQUFJSSxFQUFLWCxPQUFPWSxPQUFPLE1BR3ZCLEdBRkExQixFQUFvQmtCLEVBQUVPLEdBQ3RCWCxPQUFPQyxlQUFlVSxFQUFJLFVBQVcsQ0FBRVQsWUFBWSxFQUFNSyxNQUFPQSxJQUN0RCxFQUFQRSxHQUE0QixpQkFBVEYsRUFBbUIsSUFBSSxJQUFJTSxLQUFPTixFQUFPckIsRUFBb0JVLEVBQUVlLEVBQUlFLEVBQUssU0FBU0EsR0FBTyxPQUFPTixFQUFNTSxJQUFRQyxLQUFLLEtBQU1ELElBQzlJLE9BQU9GLEdBSVJ6QixFQUFvQjZCLEVBQUksU0FBUzFCLEdBQ2hDLElBQUlTLEVBQVNULEdBQVVBLEVBQU9xQixXQUM3QixXQUF3QixPQUFPckIsRUFBZ0IsU0FDL0MsV0FBOEIsT0FBT0EsR0FFdEMsT0FEQUgsRUFBb0JVLEVBQUVFLEVBQVEsSUFBS0EsR0FDNUJBLEdBSVJaLEVBQW9CYSxFQUFJLFNBQVNpQixFQUFRQyxHQUFZLE9BQU9qQixPQUFPa0IsVUFBVUMsZUFBZTFCLEtBQUt1QixFQUFRQyxJQUd6Ry9CLEVBQW9Ca0MsRUFBSSxHQUlqQmxDLEVBQW9CQSxFQUFvQm1DLEVBQUksRywrQkNqRnJEckIsT0FBT0MsZUFBZWIsRUFBUyxhQUFjLENBQUVtQixPQUFPLElBbUZ0RG5CLEVBQVFrQyxRQWxGUixNQUNJLGFBQVksS0FBRUMsRUFBSSxPQUFFQyxJQUNYRCxJQUNEQSxFQUFPLElBRVhFLEtBQUtGLEtBQU9BLEVBQ1pFLEtBQUtDLE9BQVMsR0FDVkYsR0FBVUEsRUFBT0UsU0FDakJELEtBQUtDLE9BQVNGLEVBQU9FLFFBRzdCLG9CQUNJLE9BQU8sRUFFWCxLQUFLQyxFQUFjQyxHQUNmLElBQUlDLEVBSUosR0FIQUYsRUFBYUMsTUFBTUUsZ0JBQWtCLEdBQ3JDSCxFQUFhQyxNQUFNRyxZQUFjLEdBQzZCLFFBQTdERixFQUFLRixFQUFhSyxjQUFjLCtCQUE0QyxJQUFQSCxHQUF5QkEsRUFBR0ksU0FDOUZSLEtBQUtGLEtBQU0sQ0FDWCxNQUFNVyxFQUFRQyxPQUFPQyxTQUFTQyxjQUFjLE9BQzVDSCxFQUFNSSxVQUFVQyxJQUFJLHVCQUNwQkwsRUFBTU0sVUFBWVosRUFBTWEsTUFDeEJQLEVBQU1OLE1BQU1jLFNBQVcsV0FDdkJSLEVBQU1OLE1BQU1lLElBQU0sTUFDbEJULEVBQU1OLE1BQU1nQixNQUFRLE9BQ3BCVixFQUFNTixNQUFNaUIsUUFBVSxNQUN0QlgsRUFBTU4sTUFBTWtCLFNBQVcsUUFDdkJuQixFQUFhb0IsWUFBWWIsR0FDekJQLEVBQWFDLE1BQU1FLGdCQUFrQkYsRUFBTW9CLFdBQzNDckIsRUFBYUMsTUFBTWMsU0FBVyxXQUM5QmYsRUFBYUMsTUFBTUcsWUFBYyxNQUNqQ0osRUFBYUssY0FHakIsT0FEQVAsS0FBS0UsYUFBZUEsRUFDYkEsRUFFWCxPQUNJLE9BQU9GLEtBQUtGLEtBRWhCLFVBQVVLLEdBQ04sTUFBTXFCLEVBQVNkLE9BQU9DLFNBQVNDLGNBQWMsT0FDdkNhLEVBQU9mLE9BQU9DLFNBQVNDLGNBQWMsT0FDM0NhLEVBQUtaLFVBQVVDLElBQUkseUJBQ25CVyxFQUFLdEIsTUFBTXVCLFFBQVUsZUFDckJELEVBQUt0QixNQUFNd0IsWUFBYyxNQUN6QkYsRUFBS3RCLE1BQU15QixNQUFRLE9BQ25CSCxFQUFLSSxVQUFZMUIsRUFBTXNCLEtBRXZCLE1BQU1oQixFQUFRQyxPQUFPQyxTQUFTQyxjQUFjLE9BaUI1QyxPQWhCQUgsRUFBTU0sVUFBWVosRUFBTWEsTUFDeEJQLEVBQU1JLFVBQVVDLElBQUksMEJBQ3BCTCxFQUFNTixNQUFNdUIsUUFBVSxlQUN0QkYsRUFBT1gsVUFBVUMsSUFBSSxvQkFDckJVLEVBQU9GLFlBQVlHLEdBQ25CRCxFQUFPTSxhQUFhLDBCQUEyQjNCLEVBQU1mLEtBQ3JEb0MsRUFBT0YsWUFBWWIsR0FDbkJlLEVBQU9PLGlCQUFpQixRQUFTLEtBQ3pCNUIsRUFBTWYsTUFBUVksS0FBS0YsS0FDbkJFLEtBQUtGLEtBQU8sR0FHWkUsS0FBS0YsS0FBT0ssRUFBTWYsSUFFdEJZLEtBQUtnQyxLQUFLaEMsS0FBS0UsYUFBY0MsS0FFMUJxQixFQUVYLFNBQ0ksTUFBTVMsRUFBT2pDLEtBQ1BrQyxFQUFVeEIsT0FBT0MsU0FBU0MsY0FBYyxPQVM5QyxPQVBBWixLQUFLQyxPQUFPa0MsUUFBU2hDLElBQ2pCLE1BQU1xQixFQUFTUyxFQUFLRyxVQUFVakMsR0FDOUIrQixFQUFRWixZQUFZRSxLQUtqQlUiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMCk7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNsYXNzIFN0eWxlZEJsb2Nrc1R1bmUge1xuICAgIGNvbnN0cnVjdG9yKHsgZGF0YSwgY29uZmlnIH0pIHtcbiAgICAgICAgaWYgKCFkYXRhKSB7XG4gICAgICAgICAgICBkYXRhID0gJyc7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgICAgICAgdGhpcy5zdHlsZXMgPSBbXTtcbiAgICAgICAgaWYgKGNvbmZpZyAmJiBjb25maWcuc3R5bGVzKSB7XG4gICAgICAgICAgICB0aGlzLnN0eWxlcyA9IGNvbmZpZy5zdHlsZXM7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhdGljIGdldCBpc1R1bmUoKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICB3cmFwKGJsb2NrQ29udGVudCwgc3R5bGUpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBibG9ja0NvbnRlbnQuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJyc7XG4gICAgICAgIGJsb2NrQ29udGVudC5zdHlsZS5wYWRkaW5nTGVmdCA9ICcnO1xuICAgICAgICAoX2EgPSBibG9ja0NvbnRlbnQucXVlcnlTZWxlY3RvcignLnN0eWxlZC1ibG9ja3MtbGFiZWwnKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnJlbW92ZSgpO1xuICAgICAgICBpZiAodGhpcy5kYXRhKSB7XG4gICAgICAgICAgICBjb25zdCBsYWJlbCA9IHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgIGxhYmVsLmNsYXNzTGlzdC5hZGQoJ3N0eWxlZC1ibG9ja3MtbGFiZWwnKTtcbiAgICAgICAgICAgIGxhYmVsLmlubmVyVGV4dCA9IHN0eWxlLnRpdGxlO1xuICAgICAgICAgICAgbGFiZWwuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xuICAgICAgICAgICAgbGFiZWwuc3R5bGUudG9wID0gJzhweCc7XG4gICAgICAgICAgICBsYWJlbC5zdHlsZS5yaWdodCA9ICcyNHB4JztcbiAgICAgICAgICAgIGxhYmVsLnN0eWxlLm9wYWNpdHkgPSAnMC41JztcbiAgICAgICAgICAgIGxhYmVsLnN0eWxlLmZvbnRTaXplID0gJzAuN2VtJztcbiAgICAgICAgICAgIGJsb2NrQ29udGVudC5hcHBlbmRDaGlsZChsYWJlbCk7XG4gICAgICAgICAgICBibG9ja0NvbnRlbnQuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gc3R5bGUuYmFja2dyb3VuZDtcbiAgICAgICAgICAgIGJsb2NrQ29udGVudC5zdHlsZS5wb3NpdGlvbiA9ICdyZWxhdGl2ZSc7XG4gICAgICAgICAgICBibG9ja0NvbnRlbnQuc3R5bGUucGFkZGluZ0xlZnQgPSAnMWVtJztcbiAgICAgICAgICAgIGJsb2NrQ29udGVudC5xdWVyeVNlbGVjdG9yO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuYmxvY2tDb250ZW50ID0gYmxvY2tDb250ZW50O1xuICAgICAgICByZXR1cm4gYmxvY2tDb250ZW50O1xuICAgIH1cbiAgICBzYXZlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhO1xuICAgIH1cbiAgICBhZGRCdXR0b24oc3R5bGUpIHtcbiAgICAgICAgY29uc3QgYnV0dG9uID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBjb25zdCBpY29uID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBpY29uLmNsYXNzTGlzdC5hZGQoJ2NlLXBvcG92ZXJfX2l0ZW0taWNvbicpO1xuICAgICAgICBpY29uLnN0eWxlLmRpc3BsYXkgPSAnaW5saW5lLWJsb2NrJztcbiAgICAgICAgaWNvbi5zdHlsZS5tYXJnaW5SaWdodCA9ICc4cHgnO1xuICAgICAgICBpY29uLnN0eWxlLmNsZWFyID0gJ2xlZnQnO1xuICAgICAgICBpY29uLmlubmVySFRNTCA9IHN0eWxlLmljb247XG4gICAgICAgIC8vIENyZWF0ZSBsYWJlbFxuICAgICAgICBjb25zdCBsYWJlbCA9IHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgbGFiZWwuaW5uZXJUZXh0ID0gc3R5bGUudGl0bGU7XG4gICAgICAgIGxhYmVsLmNsYXNzTGlzdC5hZGQoJ2NlLXBvcG92ZXJfX2l0ZW0tbGFiZWwnKTtcbiAgICAgICAgbGFiZWwuc3R5bGUuZGlzcGxheSA9ICdpbmxpbmUtYmxvY2snO1xuICAgICAgICBidXR0b24uY2xhc3NMaXN0LmFkZCgnY2UtcG9wb3Zlcl9faXRlbScpO1xuICAgICAgICBidXR0b24uYXBwZW5kQ2hpbGQoaWNvbik7XG4gICAgICAgIGJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2RhdGEtc3R5bGVkLWJsb2NrLXN0eWxlJywgc3R5bGUua2V5KTtcbiAgICAgICAgYnV0dG9uLmFwcGVuZENoaWxkKGxhYmVsKTtcbiAgICAgICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHN0eWxlLmtleSA9PT0gdGhpcy5kYXRhKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5kYXRhID0gJyc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmRhdGEgPSBzdHlsZS5rZXk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLndyYXAodGhpcy5ibG9ja0NvbnRlbnQsIHN0eWxlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBidXR0b247XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgICAgIGNvbnN0IHdyYXBwZXIgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIC8vIGxldCBidXR0b247XG4gICAgICAgIHRoaXMuc3R5bGVzLmZvckVhY2goKHN0eWxlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBidXR0b24gPSBzZWxmLmFkZEJ1dHRvbihzdHlsZSk7XG4gICAgICAgICAgICB3cmFwcGVyLmFwcGVuZENoaWxkKGJ1dHRvbik7XG4gICAgICAgIH0pO1xuICAgICAgICAvLyBpZiAoIWJ1dHRvbikge1xuICAgICAgICAvLyAgICAgYnV0dG9uID0gdGhpcy5hZGRCdXR0b24odGhpcy5zdHlsZXNbMF0pO1xuICAgICAgICAvLyB9XG4gICAgICAgIHJldHVybiB3cmFwcGVyO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IFN0eWxlZEJsb2Nrc1R1bmU7XG4iXSwic291cmNlUm9vdCI6IiJ9